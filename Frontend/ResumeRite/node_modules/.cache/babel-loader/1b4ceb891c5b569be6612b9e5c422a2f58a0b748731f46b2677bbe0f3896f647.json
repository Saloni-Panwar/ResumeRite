{"ast":null,"code":"var _jsxFileName = \"D:\\\\Resume_Rite\\\\Frontend\\\\ResumeRite\\\\src\\\\forms\\\\SkillsBox.jsx\",\n  _s = $RefreshSig$();\nimport { TextField, useMediaQuery } from \"@mui/material\";\nimport { Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillsBox = ({\n  control,\n  index\n}) => {\n  _s();\n  const isMobileScreen = useMediaQuery(\"(max-width:800px)\");\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: `Skill[${index}]`,\n    control: control,\n    rules: {\n      required: \"required\",\n      minLength: {\n        value: 2,\n        message: \"should be at least 2 characters\"\n      }\n    },\n    render: ({\n      field,\n      fieldState\n    }) => {\n      var _fieldState$error;\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Skill \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this),\n        ...field,\n        margin: \"normal\",\n        sx: {\n          marginRight: \"1rem\"\n        },\n        fullWidth: isMobileScreen ? true : false,\n        error: !!fieldState.error,\n        helperText: ((_fieldState$error = fieldState.error) === null || _fieldState$error === void 0 ? void 0 : _fieldState$error.message) || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillsBox, \"r3k7pCoPGRcYgDvkMICf5eVJrco=\", false, function () {\n  return [useMediaQuery];\n});\n_c = SkillsBox;\nexport default SkillsBox;\nvar _c;\n$RefreshReg$(_c, \"SkillsBox\");","map":{"version":3,"names":["TextField","useMediaQuery","Controller","jsxDEV","_jsxDEV","SkillsBox","control","index","_s","isMobileScreen","name","rules","required","minLength","value","message","render","field","fieldState","_fieldState$error","label","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","margin","sx","marginRight","fullWidth","error","helperText","_c","$RefreshReg$"],"sources":["D:/Resume_Rite/Frontend/ResumeRite/src/forms/SkillsBox.jsx"],"sourcesContent":["import { TextField, useMediaQuery } from \"@mui/material\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst SkillsBox = ({ control, index }) => {\r\n  const isMobileScreen = useMediaQuery(\"(max-width:800px)\");\r\n\r\n  return (\r\n    <Controller\r\n      name={`Skill[${index}]`}\r\n      control={control}\r\n      rules={{\r\n        required: \"required\",\r\n        minLength: {\r\n          value: 2,\r\n          message: \"should be at least 2 characters\",\r\n        },\r\n      }}\r\n      render={({ field, fieldState }) => (\r\n        <TextField\r\n        label={<span>Skill <span style={{ color: 'red' }}>*</span></span>}\r\n        {...field}\r\n          margin=\"normal\"\r\n          sx={{ marginRight: \"1rem\" }}\r\n          fullWidth={isMobileScreen ? true : false}\r\n          error={!!fieldState.error}\r\n          helperText={fieldState.error?.message || \"\"}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SkillsBox;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,aAAa,QAAQ,eAAe;AACxD,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,cAAc,GAAGR,aAAa,CAAC,mBAAmB,CAAC;EAEzD,oBACEG,OAAA,CAACF,UAAU;IACTQ,IAAI,EAAG,SAAQH,KAAM,GAAG;IACxBD,OAAO,EAAEA,OAAQ;IACjBK,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE;QACTC,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE;MACX;IACF,CAAE;IACFC,MAAM,EAAEA,CAAC;MAAEC,KAAK;MAAEC;IAAW,CAAC;MAAA,IAAAC,iBAAA;MAAA,oBAC5Bf,OAAA,CAACJ,SAAS;QACVoB,KAAK,eAAEhB,OAAA;UAAAiB,QAAA,GAAM,QAAM,eAAAjB,OAAA;YAAMkB,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAM,CAAE;YAAAF,QAAA,EAAC;UAAC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAE;QAAA,GAC9DV,KAAK;QACPW,MAAM,EAAC,QAAQ;QACfC,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAO,CAAE;QAC5BC,SAAS,EAAEtB,cAAc,GAAG,IAAI,GAAG,KAAM;QACzCuB,KAAK,EAAE,CAAC,CAACd,UAAU,CAACc,KAAM;QAC1BC,UAAU,EAAE,EAAAd,iBAAA,GAAAD,UAAU,CAACc,KAAK,cAAAb,iBAAA,uBAAhBA,iBAAA,CAAkBJ,OAAO,KAAI;MAAG;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACnB,EAAA,CA3BIH,SAAS;EAAA,QACUJ,aAAa;AAAA;AAAAiC,EAAA,GADhC7B,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}