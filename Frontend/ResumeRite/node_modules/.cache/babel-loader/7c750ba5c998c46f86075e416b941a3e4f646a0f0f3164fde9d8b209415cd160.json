{"ast":null,"code":"var _jsxFileName = \"D:\\\\Resume_Rite\\\\Frontend\\\\ResumeRite\\\\src\\\\Auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// LoginPage.jsx\nimport { Box, Button, Checkbox, FormControlLabel, TextField, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\"; // Import the useNavigate hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = event => {\n    event.preventDefault();\n    // Handle login logic here\n    console.log(\"Login form submitted\");\n\n    // After successful login, navigate to the home page\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    p: \"2rem\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      color: \"primary\",\n      mb: \"2rem\",\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleLogin,\n      maxWidth: \"400px\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        label: \"Email or Username\",\n        type: \"text\",\n        margin: \"normal\",\n        required: true,\n        InputLabelProps: {\n          required: true,\n          sx: {\n            \"& .MuiInputLabel-asterisk\": {\n              color: \"red\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        label: \"Password\",\n        type: \"password\",\n        margin: \"normal\",\n        required: true,\n        InputLabelProps: {\n          required: true,\n          sx: {\n            \"& .MuiInputLabel-asterisk\": {\n              color: \"red\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this),\n        label: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"primary\",\n        onClick: () => console.log(\"Navigate to forgot password page\"),\n        sx: {\n          cursor: \"pointer\",\n          mt: \"1rem\"\n        },\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        sx: {\n          marginTop: \"1rem\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"primary\",\n        sx: {\n          cursor: \"pointer\",\n          mt: \"1rem\"\n        },\n        onClick: () => navigate(\"/signup\") // Navigate to the SignUpPage\n        ,\n        children: \"Don't have an account? Sign up here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\n\n// import { useState } from \"react\";\n// import { Box, Button, Checkbox, FormControlLabel, TextField, Typography } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const LoginPage = () => {\n//   const navigate = useNavigate();\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\n\n//   const handleLogin = (event) => {\n//     event.preventDefault();\n//     // Simulate successful login logic\n//     const isValidUser = true; // Replace with real authentication logic\n\n//     if (isValidUser) {\n//       console.log(\"Login successful\");\n//       setIsLoggedIn(true); // Set user as logged in\n//       navigate(\"/\"); // Navigate to the home page\n//     } else {\n//       console.error(\"Login failed\");\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     setIsLoggedIn(false); // Set user as logged out\n//     navigate(\"/login\"); // Navigate back to the login page\n//   };\n\n//   return (\n//     <Box\n//       display=\"flex\"\n//       flexDirection=\"column\"\n//       alignItems=\"center\"\n//       justifyContent=\"center\"\n//       height=\"100vh\"\n//       p=\"2rem\"\n//     >\n//       {isLoggedIn ? (\n//         <>\n//           <Typography variant=\"h4\" color=\"primary\" mb=\"2rem\">\n//             Welcome Home!\n//           </Typography>\n//           <Button\n//             variant=\"contained\"\n//             color=\"secondary\"\n//             onClick={handleLogout} // Logout button\n//           >\n//             Logout\n//           </Button>\n//         </>\n//       ) : (\n//         <>\n//           <Typography variant=\"h4\" color=\"primary\" mb=\"2rem\">\n//             LOGIN\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleLogin} maxWidth=\"400px\" width=\"100%\">\n//             {/* Email/Username Field */}\n//             <TextField\n//               fullWidth\n//               variant=\"outlined\"\n//               label=\"Email or Username\"\n//               type=\"text\"\n//               margin=\"normal\"\n//               required\n//               InputLabelProps={{\n//                 required: true,\n//                 sx: { \"& .MuiInputLabel-asterisk\": { color: \"red\" } },\n//               }}\n//             />\n\n//             {/* Password Field */}\n//             <TextField\n//               fullWidth\n//               variant=\"outlined\"\n//               label=\"Password\"\n//               type=\"password\"\n//               margin=\"normal\"\n//               required\n//               InputLabelProps={{\n//                 required: true,\n//                 sx: { \"& .MuiInputLabel-asterisk\": { color: \"red\" } },\n//               }}\n//             />\n\n//             {/* Remember Me Checkbox */}\n//             <FormControlLabel\n//               control={<Checkbox color=\"primary\" />}\n//               label=\"Remember me\"\n//             />\n\n//             {/* Forgot Password Link */}\n//             <Typography\n//               variant=\"body2\"\n//               color=\"primary\"\n//               onClick={() => console.log(\"Navigate to forgot password page\")}\n//               sx={{ cursor: \"pointer\", mt: \"1rem\" }}\n//             >\n//               Forgot Password?\n//             </Typography>\n\n//             {/* Login Button */}\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ marginTop: \"1rem\" }}\n//             >\n//               Login\n//             </Button>\n\n//             {/* Sign Up Link */}\n//             <Typography\n//               variant=\"body2\"\n//               color=\"primary\"\n//               sx={{ cursor: \"pointer\", mt: \"1rem\" }}\n//               onClick={() => navigate(\"/signup\")} // Navigate to the SignUpPage\n//             >\n//               Don't have an account? Sign up here.\n//             </Typography>\n//           </Box>\n//         </>\n//       )}\n//     </Box>\n//   );\n// };\n\n// export default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["Box","Button","Checkbox","FormControlLabel","TextField","Typography","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","handleLogin","event","preventDefault","console","log","display","flexDirection","alignItems","justifyContent","height","p","children","variant","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","maxWidth","width","fullWidth","label","type","margin","required","InputLabelProps","sx","control","onClick","cursor","mt","marginTop","_c","$RefreshReg$"],"sources":["D:/Resume_Rite/Frontend/ResumeRite/src/Auth/Login.jsx"],"sourcesContent":["// LoginPage.jsx\r\nimport { Box, Button, Checkbox, FormControlLabel, TextField, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import the useNavigate hook\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    // Handle login logic here\r\n    console.log(\"Login form submitted\");\r\n\r\n    // After successful login, navigate to the home page\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"100vh\"\r\n      p=\"2rem\"\r\n    >\r\n      <Typography variant=\"h4\" color=\"primary\" mb=\"2rem\">\r\n        LOGIN\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleLogin} maxWidth=\"400px\" width=\"100%\">\r\n        {/* Email/Username Field */}\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Email or Username\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          InputLabelProps={{\r\n            required: true,\r\n            sx: { \"& .MuiInputLabel-asterisk\": { color: \"red\" } },\r\n          }}\r\n        />\r\n\r\n        {/* Password Field */}\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          margin=\"normal\"\r\n          required\r\n          InputLabelProps={{\r\n            required: true,\r\n            sx: { \"& .MuiInputLabel-asterisk\": { color: \"red\" } },\r\n          }}\r\n        />\r\n\r\n        {/* Remember Me Checkbox */}\r\n        <FormControlLabel\r\n          control={<Checkbox color=\"primary\" />}\r\n          label=\"Remember me\"\r\n        />\r\n\r\n        {/* Forgot Password Link */}\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"primary\"\r\n          onClick={() => console.log(\"Navigate to forgot password page\")}\r\n          sx={{ cursor: \"pointer\", mt: \"1rem\" }}\r\n        >\r\n          Forgot Password?\r\n        </Typography>\r\n\r\n        {/* Login Button */}\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          sx={{ marginTop: \"1rem\" }}\r\n        >\r\n          Login\r\n        </Button>\r\n\r\n        {/* Sign Up Link */}\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"primary\"\r\n          sx={{ cursor: \"pointer\", mt: \"1rem\" }}\r\n          onClick={() => navigate(\"/signup\")} // Navigate to the SignUpPage\r\n        >\r\n          Don't have an account? Sign up here.\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginPage; \r\n\r\n\r\n\r\n// import { useState } from \"react\";\r\n// import { Box, Button, Checkbox, FormControlLabel, TextField, Typography } from \"@mui/material\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const LoginPage = () => {\r\n//   const navigate = useNavigate();\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\r\n\r\n//   const handleLogin = (event) => {\r\n//     event.preventDefault();\r\n//     // Simulate successful login logic\r\n//     const isValidUser = true; // Replace with real authentication logic\r\n\r\n//     if (isValidUser) {\r\n//       console.log(\"Login successful\");\r\n//       setIsLoggedIn(true); // Set user as logged in\r\n//       navigate(\"/\"); // Navigate to the home page\r\n//     } else {\r\n//       console.error(\"Login failed\");\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     setIsLoggedIn(false); // Set user as logged out\r\n//     navigate(\"/login\"); // Navigate back to the login page\r\n//   };\r\n\r\n//   return (\r\n//     <Box\r\n//       display=\"flex\"\r\n//       flexDirection=\"column\"\r\n//       alignItems=\"center\"\r\n//       justifyContent=\"center\"\r\n//       height=\"100vh\"\r\n//       p=\"2rem\"\r\n//     >\r\n//       {isLoggedIn ? (\r\n//         <>\r\n//           <Typography variant=\"h4\" color=\"primary\" mb=\"2rem\">\r\n//             Welcome Home!\r\n//           </Typography>\r\n//           <Button\r\n//             variant=\"contained\"\r\n//             color=\"secondary\"\r\n//             onClick={handleLogout} // Logout button\r\n//           >\r\n//             Logout\r\n//           </Button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <Typography variant=\"h4\" color=\"primary\" mb=\"2rem\">\r\n//             LOGIN\r\n//           </Typography>\r\n//           <Box component=\"form\" onSubmit={handleLogin} maxWidth=\"400px\" width=\"100%\">\r\n//             {/* Email/Username Field */}\r\n//             <TextField\r\n//               fullWidth\r\n//               variant=\"outlined\"\r\n//               label=\"Email or Username\"\r\n//               type=\"text\"\r\n//               margin=\"normal\"\r\n//               required\r\n//               InputLabelProps={{\r\n//                 required: true,\r\n//                 sx: { \"& .MuiInputLabel-asterisk\": { color: \"red\" } },\r\n//               }}\r\n//             />\r\n\r\n//             {/* Password Field */}\r\n//             <TextField\r\n//               fullWidth\r\n//               variant=\"outlined\"\r\n//               label=\"Password\"\r\n//               type=\"password\"\r\n//               margin=\"normal\"\r\n//               required\r\n//               InputLabelProps={{\r\n//                 required: true,\r\n//                 sx: { \"& .MuiInputLabel-asterisk\": { color: \"red\" } },\r\n//               }}\r\n//             />\r\n\r\n//             {/* Remember Me Checkbox */}\r\n//             <FormControlLabel\r\n//               control={<Checkbox color=\"primary\" />}\r\n//               label=\"Remember me\"\r\n//             />\r\n\r\n//             {/* Forgot Password Link */}\r\n//             <Typography\r\n//               variant=\"body2\"\r\n//               color=\"primary\"\r\n//               onClick={() => console.log(\"Navigate to forgot password page\")}\r\n//               sx={{ cursor: \"pointer\", mt: \"1rem\" }}\r\n//             >\r\n//               Forgot Password?\r\n//             </Typography>\r\n\r\n//             {/* Login Button */}\r\n//             <Button\r\n//               type=\"submit\"\r\n//               variant=\"contained\"\r\n//               color=\"primary\"\r\n//               fullWidth\r\n//               sx={{ marginTop: \"1rem\" }}\r\n//             >\r\n//               Login\r\n//             </Button>\r\n\r\n//             {/* Sign Up Link */}\r\n//             <Typography\r\n//               variant=\"body2\"\r\n//               color=\"primary\"\r\n//               sx={{ cursor: \"pointer\", mt: \"1rem\" }}\r\n//               onClick={() => navigate(\"/signup\")} // Navigate to the SignUpPage\r\n//             >\r\n//               Don't have an account? Sign up here.\r\n//             </Typography>\r\n//           </Box>\r\n//         </>\r\n//       )}\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}