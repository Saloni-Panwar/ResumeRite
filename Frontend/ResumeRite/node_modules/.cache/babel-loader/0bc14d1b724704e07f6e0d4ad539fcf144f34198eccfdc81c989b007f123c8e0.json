{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// defining the initial states\nconst initialState = {\n  mode: \"light\",\n  template1: false,\n  template2: false,\n  template3: false,\n  template4: false,\n  personalInfo: {},\n  workExperiences: {},\n  education: {},\n  keySkills: {}\n};\n\n// defining the reducers for the initial state\nexport const stateSlice = createSlice({\n  name: \"state\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setTemplate1: state => {\n      state.template1 = !state.template1;\n    },\n    setTemplate2: state => {\n      state.template2 = !state.template2;\n    },\n    setTemplate3: state => {\n      state.template3 = !state.template3;\n    },\n    setTemplate4: state => {\n      state.template4 = !state.template4;\n    },\n    setTemplate5: state => {\n      state.template5 = !state.template5;\n    },\n    setTemplate6: state => {\n      state.template6 = !state.template6;\n    },\n    setPersonalInfo: (state, action) => {\n      state.personalInfo = action.payload;\n    },\n    setWorkExperiences: (state, action) => {\n      state.workExperiences = action.payload;\n    },\n    setEducation: (state, action) => {\n      state.education = action.payload;\n    },\n    setKeySkills: (state, action) => {\n      state.keySkills = action.payload;\n    }\n  }\n});\nexport const {\n  setMode,\n  setTemplate1,\n  setTemplate2,\n  setTemplate3,\n  setTemplate4,\n  setTemplate5,\n  setTemplate6,\n  setPersonalInfo,\n  setEducation,\n  setKeySkills,\n  setWorkExperiences\n} = stateSlice.actions;\nexport default stateSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","template1","template2","template3","template4","personalInfo","workExperiences","education","keySkills","stateSlice","name","reducers","setMode","state","setTemplate1","setTemplate2","setTemplate3","setTemplate4","setTemplate5","template5","setTemplate6","template6","setPersonalInfo","action","payload","setWorkExperiences","setEducation","setKeySkills","actions","reducer"],"sources":["D:/Resume_Rite/Frontend/ResumeRite/src/store/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// defining the initial states\r\nconst initialState = {\r\n  mode: \"light\",\r\n  template1: false,\r\n  template2: false,\r\n  template3: false,\r\n  template4: false,\r\n  personalInfo: {},\r\n  workExperiences: {},\r\n  education: {},\r\n  keySkills: {},\r\n};\r\n\r\n// defining the reducers for the initial state\r\nexport const stateSlice = createSlice({\r\n  name: \"state\",\r\n  initialState,\r\n  reducers: {\r\n    setMode: (state) => {\r\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\r\n    },\r\n    setTemplate1: (state) => {\r\n      state.template1 = !state.template1;\r\n    },\r\n    setTemplate2: (state) => {\r\n      state.template2 = !state.template2;\r\n    },\r\n    setTemplate3: (state) => {\r\n      state.template3 = !state.template3;\r\n    },\r\n    setTemplate4: (state) => {\r\n      state.template4 = !state.template4;\r\n    },\r\n    setTemplate5: (state) => {\r\n      state.template5 = !state.template5;\r\n    },\r\n    setTemplate6: (state) => {\r\n      state.template6 = !state.template6;\r\n    },\r\n    setPersonalInfo: (state, action) => {\r\n      state.personalInfo = action.payload;\r\n    },\r\n    setWorkExperiences: (state, action) => {\r\n      state.workExperiences = action.payload;\r\n    },\r\n    setEducation: (state, action) => {\r\n      state.education = action.payload;\r\n    },\r\n    setKeySkills: (state, action) => {\r\n      state.keySkills = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMode,\r\n  setTemplate1,\r\n  setTemplate2,\r\n  setTemplate3,\r\n  setTemplate4,\r\n  setTemplate5,\r\n  setTemplate6,\r\n  setPersonalInfo,\r\n  setEducation,\r\n  setKeySkills,\r\n  setWorkExperiences,\r\n} = stateSlice.actions;\r\nexport default stateSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,YAAY,EAAE,CAAC,CAAC;EAChBC,eAAe,EAAE,CAAC,CAAC;EACnBC,SAAS,EAAE,CAAC,CAAC;EACbC,SAAS,EAAE,CAAC;AACd,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGX,WAAW,CAAC;EACpCY,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,QAAQ,EAAE;IACRC,OAAO,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACb,IAAI,GAAGa,KAAK,CAACb,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACxD,CAAC;IACDc,YAAY,EAAGD,KAAK,IAAK;MACvBA,KAAK,CAACZ,SAAS,GAAG,CAACY,KAAK,CAACZ,SAAS;IACpC,CAAC;IACDc,YAAY,EAAGF,KAAK,IAAK;MACvBA,KAAK,CAACX,SAAS,GAAG,CAACW,KAAK,CAACX,SAAS;IACpC,CAAC;IACDc,YAAY,EAAGH,KAAK,IAAK;MACvBA,KAAK,CAACV,SAAS,GAAG,CAACU,KAAK,CAACV,SAAS;IACpC,CAAC;IACDc,YAAY,EAAGJ,KAAK,IAAK;MACvBA,KAAK,CAACT,SAAS,GAAG,CAACS,KAAK,CAACT,SAAS;IACpC,CAAC;IACDc,YAAY,EAAGL,KAAK,IAAK;MACvBA,KAAK,CAACM,SAAS,GAAG,CAACN,KAAK,CAACM,SAAS;IACpC,CAAC;IACDC,YAAY,EAAGP,KAAK,IAAK;MACvBA,KAAK,CAACQ,SAAS,GAAG,CAACR,KAAK,CAACQ,SAAS;IACpC,CAAC;IACDC,eAAe,EAAEA,CAACT,KAAK,EAAEU,MAAM,KAAK;MAClCV,KAAK,CAACR,YAAY,GAAGkB,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,kBAAkB,EAAEA,CAACZ,KAAK,EAAEU,MAAM,KAAK;MACrCV,KAAK,CAACP,eAAe,GAAGiB,MAAM,CAACC,OAAO;IACxC,CAAC;IACDE,YAAY,EAAEA,CAACb,KAAK,EAAEU,MAAM,KAAK;MAC/BV,KAAK,CAACN,SAAS,GAAGgB,MAAM,CAACC,OAAO;IAClC,CAAC;IACDG,YAAY,EAAEA,CAACd,KAAK,EAAEU,MAAM,KAAK;MAC/BV,KAAK,CAACL,SAAS,GAAGe,MAAM,CAACC,OAAO;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXZ,OAAO;EACPE,YAAY;EACZC,YAAY;EACZC,YAAY;EACZC,YAAY;EACZC,YAAY;EACZE,YAAY;EACZE,eAAe;EACfI,YAAY;EACZC,YAAY;EACZF;AACF,CAAC,GAAGhB,UAAU,CAACmB,OAAO;AACtB,eAAenB,UAAU,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}